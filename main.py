# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества.
# m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

# from random import randint
#
# n_list = [randint(1,20) for _ in range(int(input("Введите количество элементов первого множества: ")))]
# m_list = [randint(1,20) for _ in range(int(input("Введите количество элементов второго множества: ")))]
# print(n_list)
# print(m_list)
#
# sort_list = sorted(set(n_list).intersection(set(m_list)))
# print(sort_list)

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику.
# Она растёт на круглой грядке, причём кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
# находясь перед некоторым кустом заданной во входном файле грядки.


import random
n = int(input("Введите количество кустов на грядке: "))
shrub_bed = list(random.randint(10, 50) for i in range(n))
result = []
i = 0
max_sum = 0

print(shrub_bed)

while i < n:
    if i == n - 1:
        max_sum = shrub_bed[i] + shrub_bed[i - 1] + shrub_bed[0]
    else:
        max_sum = shrub_bed[i] + shrub_bed[i - 1] + shrub_bed[i + 1]
        result.append(max_sum)
        result.sort()
    i += 1

print(f"Максимальное число ягод, которое может собрать за один заход собирающий модуль: {result[-1]}")